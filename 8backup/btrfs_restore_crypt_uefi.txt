#systemd.unit=multi-user.target console=ttyS0 selinux=0
#yum -y install xterm && eval $(resize)

BOOT TO EFI MODE

lsblk -o +label,fstype,uuid
btrfs filesystem show

DISK_MAIN="/dev/nvme0n1"
DISK_EFI="/dev/nvme0n1p1"
DISK_BOOT="/dev/nvme0n1p2"
DISK_ROOT="/dev/nvme0n1p3"

wipefs -ab ${DISK_MAIN} && lsblk -f

parted ${DISK_MAIN} \
  mklabel gpt \
  mkpart "'EFI System Partition'" 0% 256M \
  set 1 boot on \
  mkpart BOOT 256M 768M \
  mkpart SYSTEM 768M 100% \
  print free

grep dm_crypt /proc/modules
cryptsetup benchmark

# slow and optional
cryptsetup open --cipher aes-xts-plain64 --type plain -d /dev/urandom ${DISK_ROOT} to_be_wiped
cryptsetup status /dev/mapper/to_be_wiped && dmsetup ls --target crypt
time dd if=/dev/zero of=/dev/mapper/to_be_wiped status=progress
cryptsetup close to_be_wiped && dmsetup ls --target crypt

cryptsetup luksFormat ${DISK_ROOT}
cryptsetup open ${DISK_ROOT} "luks-$(cryptsetup luksUUID ${DISK_ROOT})"
dmsetup ls --target crypt

mount -t cifs //192.168.4.83/backup /mnt/backup -o username=zorg
cd /mnt/backup/probook/system/latest/ && ls -alh

mkfs.btrfs -L probook -m dup -d single "/dev/mapper/luks-$(cryptsetup luksUUID ${DISK_ROOT})"
mkdir /mnt/restore
mount -o compress=zstd:1 "/dev/mapper/luks-$(cryptsetup luksUUID ${DISK_ROOT})" /mnt/restore/
btrfs su list -t /mnt/restore/
gpg -d --quiet --pinentry-mode loopback -o - root-2022-05-30-2054665304.btrfs.zst.gpg | zstdmt -d | btrfs receive -v /mnt/restore/ && btrfs su list -t /mnt/restore/
btrfs su snapshot /mnt/restore/latest_weekend/ /mnt/restore/root && btrfs su list -t /mnt/restore 
btrfs su delete /mnt/restore/latest_weekend/ && btrfs su list -t /mnt/restore 
umount /mnt/restore
mount -o compress=zstd:1,subvol=root "/dev/mapper/luks-$(cryptsetup luksUUID ${DISK_ROOT})" /mnt/restore/

mkfs.ext4 ${DISK_BOOT} && mount ${DISK_BOOT} /mnt/restore/boot/
gpg -d --pinentry-mode loopback -o - boot-2022-05-30-2054665304.tar.zst.gpg | zstdmt -d | tar -C /mnt/restore -xvf - 

mkfs.vfat -F 32 ${DISK_EFI} && mount ${DISK_EFI} /mnt/restore/boot/efi/
gpg -d --pinentry-mode loopback -o - efi-2022-05-30-2054665304.tar.zst.gpg | zstdmt -d | tar -C /mnt/restore -xvf -

\cp --remove-destination /etc/resolv.conf /mnt/restore/etc/
for i in {dev,sys,proc}; do mount -o bind /$i /mnt/restore/$i; done
chroot /mnt/restore/ /bin/bash

mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm.conf

touch /.autorelabel
\rm -v /etc/ssh/ssh_host_*
echo > /etc/machine-id
btrfs fi label / NEWNAME && btrfs fi show

mv /etc/X11/xorg.conf.d/20-amdgpu.conf /etc/X11/xorg.conf.d/20-amdgpu.conf.disabled

ls /dev/disk/by-id/
cat partition_layout-*.txt
dmsetup ls --target crypt
blkid
vim /etc/fstab

vim /etc/crypttab
dracut --regenerate-all --force

https://mirrors.edge.kernel.org/pub/linux/utils/boot/dracut/dracut.html#_crypto_luks
vim /etc/default/grub

#https://fedoraproject.org/wiki/GRUB_2#Instructions_for_UEFI-based_systems
#https://bugzilla.redhat.com/show_bug.cgi?id=1917213
\rm -v /boot/efi/EFI/fedora/grub.cfg && \rm -v /boot/grub2/grub.cfg
yum -y upgrade shim-* grub2-efi-* grub2-common
yum -y reinstall shim-* grub2-efi-* grub2-common

umount /mnt/backup
#UNPLUG  

reboot

vim /usr/local/bin/backupdate.sh
btrfs subvolume create /.sv/previous_nightly
btrfs subvolume create /.sv/previous_weekend

vim /etc/smartmontools/smartd.conf
hostnamectl set-hostname NEWNAME && hostnamectl

#dracut -v --no-hostonly -a "rescue" --force /boot/initramfs-0-rescue-0b5b35daa76047c89106db491de70957.img $(uname -r)
#https://askbot.fedoraproject.org/en/question/40409/cant-boot-into-rescue-mode-how-to-re-generate-initramfs/
