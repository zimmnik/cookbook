#------------------------------------------------------------------------------
# Usage

curl -u kibana:password -s -XGET http://localhost:9200

curl -XPUT "http://localhost:9200/_settings" -H 'Content-Type: application/json' -d'{  "index" : { "number_of_replicas" : 0 }}'

curl -XGET https://localhost:9200 -u admin:admin --insecure
curl -XGET https://localhost:9200/_cat/nodes?v -u admin:admin --insecure
curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure

curl -s -XGET "http://localhost:9200/_cluster/settings?include_defaults=true&flat_settings=true" | jq '.' | less
 
curl -X PUT "localhost:9200/_cluster/settings?pretty" -H 'Content-Type: application/json' -d'
{
    "persistent" : {
		 "thread_pool.bulk.queue_size": "200"
    }
}
#-----------------------------------------------------------------------------
# INDEX

# Get index list
GET _cat/indices
# Create index
PUT test_index4
{
  "mappings": {
    "properties": {
      "@ts": {
        "type": "date"
      },
      "log": {
        "type": "text"
      }
    }
  }
}
# Get index structure
GET /test_index/_mapping
GET /logstash-2019.11.22
# Put document
POST test_index3/_doc
{
  "@ts": "2019-12-18T11:10:00.000Z",
  "log": "dummy_text6"
}
# Get all documents
GET /test_index/_search?pretty
{
    "query": {
        "match_all": {}
    }
}
# Get index settings
GET /test_index
# Set replicas count
PUT logstash-*/_settings
{
  "number_of_replicas" : "0"
}
# Delete index
DELETE /logstash-*

#-----------------------------------------------------------------------------
POST /_cluster/reroute

#-----------------------------------------------------------------------------
# ILM POLICY

# Check state ilm (RUNNING or not)
GET /_ilm/status

# Get all settings
GET _cluster/settings?include_defaults=true
# Set policy poll interval
PUT /_cluster/settings
{
 "persistent" : {
 "indices.lifecycle.poll_interval": "1m"
 }
}

# Get all policies
GET _ilm/policy/
# Put ilm_policy
PUT /_ilm/policy/test_policy?pretty
{
  "policy": {
    "phases": {
      "delete": {
        "min_age": "5m",
        "actions": {
          "delete": {}
        }
      }
    }
  }
}
# Get policy settings
GET _ilm/policy/test_policy
# Delete policy
DELETE _ilm/policy/test_policy

# Assign policy to index
GET test_*/_settings 		
PUT test_*/_settings
{
  "lifecycle.name": "test_policy"
}
# Get status policy for index
GET test_index3/_ilm/

#-----------------------------------------------------------------------------
# TEMPLATES

# Get all index templates
GET _template
# put template
PUT /_template/test_template?pretty
{
  "index_patterns" : [
    "logstash-*"
  ],
  "settings": {
    "index" : {
      "number_of_replicas" : 0,
      "lifecycle" : {
        "name" : "test_policy"
        }
      }
  }
}
# Get template by name
GET _template/test_template
GET _template/logstash
# Delete template by name
DELETE _template/test_template
GET logstash-2019.12.18/_ilm/explain

#------------------------------------------------------------------------------------------------------
# INDEX SEARCH
GET /test_index/_search?q=MQ_CR_ERR_*

POST /test_index/_search?pretty
{
  "size": 500,
  "query": {
    "bool": {
      "must": [
        {
          "query_string": {
            "query": "MQ_CR_ERR*",
            "analyze_wildcard": true,
            "time_zone": "Europe/Moscow"
          }
        },
        {
          "range": {
            "@ts": {
              "format": "strict_date_optional_time",
              "gte": "2019-11-15T12:50:00.000Z",
              "lte": "2019-11-15T12:53:00.000Z"
            }
          }
        }
      ]
    }
  }
}
#------------------------------------------------------------------------------------------------------
# MAKE TEST FLOOD
for i in {1..5}; do curl --insecure -u admin:admin -XPOST "https://od-elastic:9200/test_index/_doc" -H 'Content-Type: application-11-15T12:56:00.000Z",  "text": "cbsmq|#MQ_CR_ERR_ABC '${i}'"}'; done
