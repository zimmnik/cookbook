#connect repo
helm repo add bitnami https://charts.bitnami.com/bitnami && helm repo update
helm search repo -l kafka | less

# inspect namespace
helm list
k get pod,pvc

#deploy
time helm install pr22-kafka-demo bitnami/kafka --version 22.1.1 --wait -f values.yaml

# test
kubectl run pr22-kafka-demo-client --restart='Never' --image docker.io/bitnami/kafka:3.4.0-debian-11-r28 --command -- sleep infinity
kubectl exec --tty -i pr22-kafka-demo-client -- bash -c "kafka-metadata-quorum.sh --bootstrap-server pr22-kafka-demo:9092 describe --replication"

#clean
#kubectl delete pod pr22-kafka-demo-client; helm uninstall pr22-kafka-demo --wait && k delete pvc --wait=true --all

#/bin/bash

#set -o xtrace
set -o pipefail
set -o nounset
#set -o errexit

export MSG=$(uuidgen)
export TOPIC="check-devops"
export SERVER="localhost:9092" 

bin/kafka-metadata-quorum.sh --bootstrap-server ${SERVER} describe --status
bin/kafka-metadata-quorum.sh --bootstrap-server ${SERVER} describe --replication

bin/kafka-topics.sh --bootstrap-server ${SERVER}                  --list 
bin/kafka-topics.sh --bootstrap-server ${SERVER} --topic ${TOPIC} --delete    2>/dev/null || true 
bin/kafka-topics.sh --bootstrap-server ${SERVER} --topic ${TOPIC} --create   
bin/kafka-topics.sh --bootstrap-server ${SERVER} --topic ${TOPIC} --describe 

echo $MSG | bin/kafka-console-producer.sh --bootstrap-server ${SERVER} --topic ${TOPIC} 
RESULT=   $(bin/kafka-console-consumer.sh --bootstrap-server ${SERVER} --topic ${TOPIC} --offset 0 --partition 0 --max-messages 1)
if [[ ${MSG} != ${RESULT} ]]; then echo FAIL; else echo SUCCESS; fi

bin/kafka-topics.sh --bootstrap-server ${SERVER} --topic ${TOPIC} --delete
