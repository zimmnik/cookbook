yum group list --hidden -v
yum group info vagrant

sudo yum -y install @vagrant rsync

#---------------------------------------------------------
Vagrant.configure("2") do |config|

  config.vm.define "alma", autostart: false do |alma|
    alma.vm.box = "almalinux/9"
    alma.vm.provider :libvirt do |lv|
      lv.title = 'alma'
    end
  end

  config.vm.define "fedora", autostart: true, primary: true do |fedora|
    fedora.vm.box = "fedora/38-cloud-base"
    fedora.vm.provider :libvirt do |lv|
      lv.title = 'fedora'
    end
  end

  config.vm.define "oracle", autostart: false do |oracle|
    oracle.vm.box = "oraclelinux/9-btrfs"
    oracle.vm.box_url = "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/9-btrfs.json"
    oracle.vm.provider :libvirt do |lv|
      lv.title = 'oracle'
    end
  end
 
  config.vm.provider :libvirt do |lv|
    lv.cpus = 4
    lv.memory = 4096
    lv.video_type = 'virtio'
    lv.graphics_type = 'spice'
    lv.default_prefix = 'vagrant_'
    lv.qemu_use_session = false
  end

  config.vm.synced_folder "../ansible", "/vagrant", type: "rsync"

  config.vm.provision "shell", inline: <<-SHELL
    set -o pipefail
    set -o errexit
    set -o nounset
    #set -o xtrace

    yum -y -q install git
    cd /vagrant
    python3 -m venv --upgrade-deps .venv && source .venv/bin/activate
    export ANSIBLE_PYTHON_INTERPRETER=/vagrant/.venv/bin/python3

    pip3 install -r pip_requirements.txt
    ansible-playbook --version
    ansible-galaxy install -r galaxy_requirements.yml
    ansible-playbook -i hosts run.yml
  SHELL

  #config.vm.provision "shell", inline: "yum -y -q install git"
  #config.vm.provision :ansible_local do |ansible|
  #  #ansible.verbose = "vvvv"
  #  ansible.compatibility_mode = "2.0"
  #  ansible.raw_arguments = "--diff"
  #  ansible.playbook = "run.yml"
  #  #ansible.config_file = "ansible/ansible.cfg"
  #  ansible.galaxy_role_file = "galaxy_requirements.yml"
  #  ansible.galaxy_command = "ansible-galaxy install --role-file %{role_file}"
  #end
end

#---------------------------------------------------------
Vagrant.configure("2") do |config|
  config.vm.box = "centos/8"

  config.vm.provider :libvirt do |lv|
    lv.cpus = 8
    lv.memory = 16384
    lv.machine_virtual_size = 64
  end

  config.vm.provision "shell", inline: <<-SHELL
    echo -e "resizepart\n1\nYes\n100%\nprint free\nquit" | parted /dev/vda ---pretend-input-tty
    xfs_growfs / -d
    df -h
    #yum -y install epel-release
    #yum -y install git ansible vim mc less ncdu
  SHELL
end
#----------------------------------------------------------
# Setup DNS for vagrant host
echo -e "DNS=172.28.128.1\nDomains=~test.local" | sudo tee -a /etc/systemd/resolved.conf && \
sudo systemctl restart systemd-resolved.service
...
  config.vm.network :private_network,
    type: "dhcp",
    libvirt__domain_name: "test.local",
    libvirt__host_ip: "172.28.128.1"
...
#----------------------------------------------------------
for NET in vagrant-management vagrant-private-dhcp; do virsh net-destroy $NET && virsh net-undefine $NET; done && watch -n 5 virsh net-list --all
time vagrant up node.test.local && vagrant ssh -c "cat /etc/resolv.conf && ip r && ping -c 4 node.test.local"

