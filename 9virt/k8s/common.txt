# supported objects
k api-versions

#fields help
k explain pods.spec.hostAliases

#----------------------------------------------------------------------
# cluster-info
k version --short && \
k cluster-info && \
k get nodes -o wide

# list global objects
k api-resources --namespaced=false

# list namespaces
k get namespaces

# events monitoring
k get events --all-namespaces -w
k -n logging get events --field-selector involvedObject.name=elastalert-server-0

#pods on node
k get pods --all-namespaces -o wide --field-selector spec.nodeName=k8s-02-node01
#----------------------------------------------------------------------
# all objects in namespace
k api-resources --namespaced=true -n staging

NS=kubernetes-dashboard && k -n $NS api-resources --namespaced=true -o name | xargs --verbose -I {} kubectl -n $NS get {} --show-kind --ignore-not-found 2>&1 | less

# search by name
k api-resources -o name | xargs --verbose -I {} kubectl get {} --show-kind --ignore-not-found --all-namespaces 2>&1 | grep dash

# get main objects
k get all,pvc -o wide -n kubernetes-dashboard | less

# monitoring events on sts
k -n staging get events sts/staging-mq -w

# clean up persistentVolume
k -n staging scale --replicas=0 sts/forebank-mq 
time k -n staging rollout status sts/staging-mq -R -w
k -n staging delete pvc/forebank-mq-pvc

#------------------------------------------------------------------
kubectl patch daemonset <name-of-daemon-set> -p '{"spec": {"template": {"spec": {"nodeSelector": {"non-existing": "true"}}}}}'
kubectl patch daemonset <name-of-daemon-set> --type json -p='[{"op": "remove", "path": "/spec/template/spec/nodeSelector/non-existing"}]'

#------------------------------------------------------------------

k create configmap demo --dry-run --from-file config.json,elastalert.yaml -o yaml | less
#----------------------------------------------------------------------
# pod list monitoring
watch 'kubectl -n staging get pod -o wide'
k get pods --show-labels -n kubernetes-dashboard

# get pod info
k -n staging get pod -o yaml | less
k -n staging top pod
k -n staging describe pod/staging-mq-0

# monitoring logs on pod  
k get event --field-selector involvedObject.name=kubernetes-dashboard -n kube-system
k -n staging logs staging-mq-1 -f
NAME=k8s-02-node01 && \
NS=`k get pods -n logging -l app=fluent-bit -o=custom-columns=NAME:.metadata.name --no-headers --field-selector spec.nodeName=$NAME` && \
k logs $NS -n logging

k -n logging logs pod/grafana-68df5f7c4c-dfhz9 -c init-chown-data

#port forward
k -n testing port-forward debug 8089:8089

#file copy
k -n testing cp C:\file.py failover-devel:/usr/local/bin/file.py

# kill namespace
kubectl get namespace "review" -o json   | tr -d "\n" | sed "s/\"finalizers\": \[[^]]\+\]/\"finalizers\": []/"   | kubectl replace --raw /api/v1/namespaces/review/finalize -f -
