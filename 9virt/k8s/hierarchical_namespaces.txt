https://github.com/kubernetes-sigs/multi-tenancy/releases

PROS
1) OBJECT(POLICY) HERITANCE
2) CREATE NS WITHOUT WITHOUT CLUSTER LEVER PERMISSIONS

#--------------------------------------------------------------------------------------------------------------------------
# INSTALL HNS

# Select the latest version of HNC
HNC_VERSION=v0.8.0

# Forbid HNC from modifying system namespaces
kubectl label ns kube-system hnc.x-k8s.io/excluded-namespace=true --overwrite
kubectl label ns kube-public hnc.x-k8s.io/excluded-namespace=true --overwrite
kubectl label ns kube-node-lease hnc.x-k8s.io/excluded-namespace=true --overwrite

# Install HNC. Afterwards, wait up to 30s for HNC to refresh the certificates on its webhooks.
kubectl apply -f https://github.com/kubernetes-sigs/multi-tenancy/releases/download/hnc-${HNC_VERSION}/hnc-manager.yaml && sleep 30

#--------------------------------------------------------------------------------------------------------------------------
# INSTALL KUBECTL PLUGIN WITH KREW MANAGER
https://krew.sigs.k8s.io/docs/user-guide/setup/install/#bash
sudo yum -y install git
(
  set -x; cd "$(mktemp -d)" &&
  OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.tar.gz" &&
  tar zxvf krew.tar.gz &&
  KREW=./krew-"${OS}_${ARCH}" &&
  "$KREW" install krew
)
echo 'export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"' >> ~/.bashrc && bash
k krew install hns

#-----------------------------------------------------------------------------------------------------------
# CREATE SUBNAMESPACE

# create subnamespace
kubectl hns create child -n parent

# verify hns tree
kubectl hns tree parent

# verify subnamespace
kubectl get -oyaml -nparent subns child

# verify subnamespace hierachy object
kubectl get -oyaml -nchild hierarchyconfiguration hierarchy

# subnamespaces are created as a child of another namespace, and this parent can never be changed
# if the parent is deleted, so is the subnamespace too.

#-----------------------------------------------------------------------------------------------------------
# INSPECT NAMESPACE HIERARCHIES

# show full tree
kubectl hns tree -A

# show part of tree
kubectl hns tree <name>

# show more detailed
kubectl hns describe NAMESPACE

#-----------------------------------------------------------------------------------------------------------
# PROPAGATING POLICIES ACROSS NAMESPACES
#By default, HNC propagates RBAC Role and RoleBinding objects only

#-----------------------------------------------------------------------------------------------------------
# DELETE A SUBNAMESPACE

# Subnamespaces are always manipulated via their anchors. For example, you cannot delete a subnamespace by deleting it directly:
kubectl delete namespace child

# you must delete its anchor (note that subns is a short form of subnamespaceanchor):
kubectl delete subns child -n parent

# by default isn't allowed cascading deletion.
kubectl delete subns service-1 -n team-a

# set allowCascadingDeletion on subns
kubectl hns set service-1 --allowCascadingDeletion

# cascading deletion is allowed now
kubectl delete subns service-1 -n team-a

#-----------------------------------------------------------------------------------------------------------
# ORGANIZE FULL NAMESPACES INTO A HIERARCHY

# set fullnamespace ns-foo as parent for ns-bar
kubectl hns set ns-bar --parent ns-foo
# remove parent from ns-basn full namespace
kubectl hns set ns-bar --root

#----------------------------------------------------------------------------------------------------------------------------------------------
# LIMIT THE PROPAGATION OF AN OBJECT TO DESCENDANT NAMESPACES

# disallow propagation absolutely
kubectl annotate secret my-secret -n parent propagate.hnc.x-k8s.io/none=true

# allow propagation only for child with name 'child1'
kubectl annotate secret my-secret -n parent propagate.hnc.x-k8s.io/treeSelect=child1

# disallow propagation only for children with names 'child2' and 'child3'
kubectl annotate secret my-secret -n parent propagate.hnc.x-k8s.io/treeSelect="!child2, !child3"

# The object will only be propagated to namespaces whose labels match the label selector. 
kubectl annotate secret my-secret -n parent propagate.hnc.x-k8s.io/select=child1.tree.hnc.x-k8s.io/depth

# The object will only be propagated to namespaces whose labels don't match the label selector. 
kubectl annotate secret my-secret -n parent propagate.hnc.x-k8s.io/select="!child2.tree.hnc.x-k8s.io/depth, !child3.tree.hnc.x-k8s.io/depth"

#----------------------------------------------------------------------------------------------------------------------------------------------
EXCLUDING NAMESPACE FROM HNS
kubectl label ns <name> hnc.x-k8s.io/excluded-namespace=true

#-----------------------------------------------------------------------------------------------------------
# MODIFY RESOURCES LIST PROPAGATED BY HNC

# view config
kubectl get hncconfiguration config -o yaml 
kubectl hns config describe

# allow global secrets propagation
kubectl hns config set-resource secrets --mode Propagate

#----------------------------------------------------------------------------------------------------------- 
# GATHER METRICS
# HNC exposes metrics https://github.com/kubernetes-sigs/multi-tenancy/blob/master/incubator/hnc/docs/user-guide/how-to.md#gather-metrics
