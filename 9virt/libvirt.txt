#FYI
# https://libvirt.org/formatnetwork.html#elementVlanTag
# https://serverfault.com/questions/1040692/tagged-vlan-on-kvm-with-macvtap-driver?noredirect=1&lq=1
# https://serverfault.com/questions/1051294/vlan-support-with-libvirt-for-linux-bridge-to-virtual-machines
# ls /usr/share/qemu/firmware

#-------------------------------------------------------------------------------
# INSTALLATION

# FEDORA
yum group list --hidden -v
sudo yum -y install @virtualization
sudo systemctl enable libvirtd --now
# ORACLE
yum -y install qemu-kvm libvirt virt-install nc virt-top
for drv in qemu network nodedev nwfilter secret storage interface; do systemctl start virt${drv}d{,-ro,-admin}.socket; done


#-------------------------------------------------------------------------------
# SETUP
sudo usermod -aG libvirt zorg
mkdir -p ~/.config/libvirt/ && echo 'uri_default = "qemu:///system"' > ~/.config/libvirt/libvirt.conf

#-------------------------------------------------------------------------------
# CHECK
virt-host-validate
virsh -c qemu:///session list --all
virsh -c qemu:///system list --all

#-------------------------------------------------------------------------------
# CUSTOMIZE DISK
virt-customize -a /var/lib/libvirt/images/imagetest1.qcow2 --hostname vm01.test.lab --root-password password:rootpw --ssh-inject 'root:file:labkey.pub' --uninstall cloud-init --selinux-relabel

#-------------------------------------------------------------------------------
# NETWORK SETUP
virsh net-update vagrant-libvirt add dns-host '<host ip="192.168.11.11"> <hostname>blah2.laine.org</hostname> </host>' --live --config

#--------------------------------------------------------
# BUGS
# https://discussion.fedoraproject.org/t/libvirtd-stop-responding-after-some-time/84324/3

# Libvirtd stop responding after some time
tee /etc/sysconfig/virtnetworkd << EOF > /dev/null
VIRTNETWORKD_ARGS=
EOF
systemctl enable virtnetworkd.service
systemctl restart virtnetworkd.service

#---------------------------------------------------------------------------------------------------------------
# KICKSTART

virt-install -n gitlab --osinfo ol9 --boot uefi \
--vcpus 4 --ram 4096 --video none --graphics none --disk path=/var/lib/libvirt/images/gitlab.qcow2,size=64 \
--network type=direct,source=eno1.4,source_mode=bridge \
--location OracleLinux-R9-U2-x86_64-boot-uek.iso,kernel=images/pxeboot/vmlinuz,initrd=/images/pxeboot/initrd.img \
--extra-args "inst.stage2=hd:LABEL=OL-9-2-0-BaseOS-x86_64 console=ttyS0 inst.text \
inst.ks=https://raw.githubusercontent.com/zimmnik/provisioner/master/kickstart/oracle.cfg"
#To exit a virsh console session - CTRL + Shift + ]
virsh destroy OL9; virsh list --all; virsh undefine OL9 --nvram --storage vda; virsh list --all; virsh vol-list default

time virt-install -n OL8 --osinfo ol8.5 --boot uefi \
--vcpus 2 --ram 2048  --video none --graphics none --disk path=/var/lib/libvirt/images/OL8.qcow2,size=16 -w network=default \
--location OL8U8-x86_64-boot-uek.iso,kernel=images/pxeboot/vmlinuz,initrd=/images/pxeboot/initrd.img \
--extra-args "inst.stage2=hd:LABEL=OL-8-8-0-BaseOS-x86_64 console=ttyS0 inst.text \
inst.ks=https://raw.githubusercontent.com/zimmnik/provisioner/master/kickstart/oracle8A.cfg"

virt-install -n f37 --osinfo fedora35 --boot uefi \
--vcpus 2 --ram 1024 --video none --graphics none  --disk path=/var/lib/libvirt/images/f37.qcow2,size=8 \
--network type=direct,source_mode=bridge,source=enp4s0 \
--location Fedora-Everything-netinst-x86_64-37-1.7.iso,kernel=/images/pxeboot/vmlinuz,initrd=/images/pxeboot/initrd.img \
--extra-args "inst.stage2=hd:LABEL=Fedora-E-dvd-x86_64-37 console=ttyS0 inst.text \
inst.ks=https://raw.githubusercontent.com/zimmnik/provisioner/master/kickstart/fedora.cfg "

#---------------------------------------------------------------------------------------------------------------
# OPENWRT
mkdir wrtlab && cd wrtlab 

gunzip openwrt-21.02.0-x86-64-generic-ext4-combined.img.gz 
qemu-img convert -f raw -O qcow2 openwrt-21.02.0-x86-64-generic-ext4-combined.img openwrt-21.02.0-x86-64-generic-ext4-combined.qcow2

# make isolated network
cat << 'EOF' > wrtlocalnet.xml && virsh net-define wrtlocalnet.xml && rm -v wrtlocalnet.xml
<network>
  <name>wrtlocalnet</name>
  <bridge stp='off'/>
  <ip address='192.168.123.253' netmask='255.255.255.0'>
  </ip>
</network>
EOF
virsh net-start default && virsh net-start wrtlocalnet && virsh net-list --all

virt-install -n openwrt --osinfo linux2020 --install no_install=yes \
 --vcpus 1 --ram 256 --video none --graphics none  \
 --disk path=openwrt-21.02.0-x86-64-generic-ext4-combined.qcow2 \
 -w network=wrtlocalnet -w network=default \
 --transient
sed -i 's/192.168.1.1/192.168.123.254/g' /etc/config/network && reload_config 

# make client
virt-install -n sysrescd --osinfo linux2020 --install no_install=yes  \
 --vcpus 1 --ram 1024 --video none --graphics none \
 --disk device=cdrom,path=/home/zorg/ISO/systemrescue-8.03-amd64.iso \
 -w network=wrtlocalnet \
 --transient
# tab, after esc for repaint menu
# choose menu item with up\down key, tab key for edit boot options, add kernel arg: console=ttyS0, enter for run
pacman -Syy && pacman -S --noconfirm xterm && eval $(/usr/bin/resize) && mc

#---------------------------------------------------------
# RUN FROM CONTAINER
docker run -it --rm --name demo -v /var/run/libvirt/:/var/run/libvirt/ --privileged almalinux:8
yum -y install libvirt-client && virsh nodeinfo

#---------------------------------------------------------
# FEDORA LIVE CD
virt-install --name flivecd --install no_install=yes \
--osinfo fedora-unknown --graphics none --disk none \
--boot loader=/usr/share/edk2/ovmf/OVMF_CODE.fd,loader.readonly=yes,loader_secure=no \
--location Fedora-Workstation-Live-x86_64-38-1.6.iso \
--extra-args "console=ttyS0 root=live:CDLABEL=Fedora-WS-Live-38-1-6 rd.live.image systemd.unit=multi-user.target" \
--transient

#---------------------------------------------------------
# FEDORA CLOUD IMAGE

cat << 'EOF' > cloud_init_meta.yaml 
#cloud-config
# vim: syntax=yaml
# FYI 
# https://cloudinit.readthedocs.io/en/latest/reference/datasources/nocloud.html#example-meta-data
instance-id: i-fdebug
local-hostname: cloudimg
EOF

cat << 'EOF' > cloud_init_user.yaml 
#cloud-config
# vim: syntax=yaml
# FYI
# https://cloudinit.readthedocs.io/en/latest/reference/modules.html#users-and-groups
users:
- name: root
  lock_passwd: False
  plain_text_passwd: root

#fqdn: myhost.example.com

#WAREHOUSE
#eval $(resize)
#cat /etc/cloud/cloud.cfg
#cloud-init analyze show | less
EOF

virt-install --name fdebug --install no_install=yes \
--osinfo fedora-unknown --graphics none \
--boot loader=/usr/share/edk2/ovmf/OVMF_CODE.fd,loader.readonly=yes,loader_secure=no \
--cloud-init meta-data=cloud_init_meta.yaml,user-data=cloud_init_user.yaml \
--disk=size=16,backing_store="Fedora-Cloud-Base-Generic.x86_64-40-1.14.qcow2"
