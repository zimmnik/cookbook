#FYI https://libvirt.org/formatnetwork.html#elementVlanTag
#FYI https://serverfault.com/questions/1040692/tagged-vlan-on-kvm-with-macvtap-driver?noredirect=1&lq=1
#FYI https://serverfault.com/questions/1051294/vlan-support-with-libvirt-for-linux-bridge-to-virtual-machines

# BUGS
# https://discussion.fedoraproject.org/t/libvirtd-stop-responding-after-some-time/84324/3

yum group list --hidden -v

#FEDORA DESKTOP
sudo yum -y install @virtualization
sudo usermod -aG libvirt zorg
sudo systemctl enable libvirtd --now

mkdir -p ~/.config/libvirt/ && echo 'uri_default = "qemu:///system"' > ~/.config/libvirt/libvirt.conf

#ORACLE LINUX SERVER

yum -y install qemu-kvm libvirt virt-install nc virt-top
for drv in qemu network nodedev nwfilter secret storage interface; do systemctl start virt${drv}d{,-ro,-admin}.socket; done
virt-host-validate

#---------------------------------------------------------------------------------------------------------------
N=local-zorg
P="~/.local/libvirt/images"
mkdir -p $P &&virsh pool-define-as $N dir --target $P && virsh pool-build $N && virsh pool-start $N && virsh pool-autostart $N && virsh pool-list --all
virsh pool-destroy $N && virsh pool-undefine $N && virsh pool-list --all 

# copy iso

virt-install -n sysrescd --osinfo linux2020 --install no_install=yes   --vcpus 1 --ram 1024 --video none --graphics none  --disk device=cdrom,path=/home/zorg/.local/libvirt/images/systemrescue-8.03-amd64.iso  -w network=default  --transient && virsh destroy sysrescd
# tab, after esc for repaint menu
# choose menu item with up\down key, tab key for edit boot options, add kernel arg: console=ttyS0, enter for run
pacman -Syy && pacman -S --noconfirm xterm && eval $(/usr/bin/resize) && mc

#---------------------------------------------------------------------------------------------------------------
#virt-install --noautoconsole
#virt-customize -a /var/lib/libvirt/images/imagetest1.qcow2 --hostname vm01.test.lab --root-password password:rootpw --ssh-inject 'root:file:labkey.pub' --uninstall cloud-init --selinux-relabel
#virsh net-update vagrant-libvirt add dns-host '<host ip="192.168.11.11"> <hostname>blah2.laine.org</hostname> </host>' --live --config

#---------------------------------------------------------------------------------------------------------------
# AUTO WITH SERIAL
virt-install -n OL9 --osinfo ol9.0 --boot uefi \
--vcpus 8 --ram 4096 --video none --graphics none --disk path=/var/lib/libvirt/images/OL9.qcow2,size=16 -w network=default \
--location OracleLinux-R9-U0-x86_64-boot-uek.iso,kernel=images/pxeboot/vmlinuz,initrd=/images/pxeboot/initrd.img \
--extra-args "inst.stage2=hd:LABEL=OL-9-0-0-BaseOS-x86_64 console=ttyS0 inst.text \
inst.ks=https://raw.githubusercontent.com/zimmnik/provisioner/master/kickstart/ol9a.cfg "
#To exit a virsh console session - CTRL + Shift + ]

time virt-install -n OL8 --osinfo ol8.5 --boot uefi \
--vcpus 2 --ram 2048  --video none --graphics none --disk path=/var/lib/libvirt/images/OL8.qcow2,size=16 -w network=default \
--location OL8U8-x86_64-boot-uek.iso,kernel=images/pxeboot/vmlinuz,initrd=/images/pxeboot/initrd.img \
--extra-args "inst.stage2=hd:LABEL=OL-8-8-0-BaseOS-x86_64 console=ttyS0 inst.text \
inst.ks=https://raw.githubusercontent.com/zimmnik/provisioner/master/kickstart/oracle8A.cfg"

virt-install -n f37 --osinfo fedora35 --boot uefi \
--vcpus 2 --ram 1024 --video none --graphics none  --disk path=/var/lib/libvirt/images/f37.qcow2,size=8 \
--network type=direct,source_mode=bridge,source=enp4s0 \
--location Fedora-Everything-netinst-x86_64-37-1.7.iso,kernel=/images/pxeboot/vmlinuz,initrd=/images/pxeboot/initrd.img \
--extra-args "inst.stage2=hd:LABEL=Fedora-E-dvd-x86_64-37 console=ttyS0 inst.text \
inst.ks=https://raw.githubusercontent.com/zimmnik/provisioner/master/kickstart/f37a.cfg "

# STOP and REMOVE VM
virsh destroy OL9; virsh list --all; virsh undefine OL9 --nvram --storage vda; virsh list --all; virsh vol-list default
#---------------------------------------------------------------------------------------------------------------
mkdir wrtlab && cd wrtlab 

# get openwrt disk image
curl -LO https://downloads.openwrt.org/releases/21.02.0/targets/x86/64/openwrt-21.02.0-x86-64-generic-ext4-combined.img.gz
curl -LO https://downloads.openwrt.org/releases/21.02.0/targets/x86/64/sha256sums
sha256sum -c sha256sums --ignore-missing && rm sha256sums

gunzip openwrt-21.02.0-x86-64-generic-ext4-combined.img.gz 
qemu-img convert -f raw -O qcow2 openwrt-21.02.0-x86-64-generic-ext4-combined.img openwrt-21.02.0-x86-64-generic-ext4-combined.qcow2

# make isolated network
cat << 'EOF' > wrtlocalnet.xml && virsh net-define wrtlocalnet.xml && rm -v wrtlocalnet.xml
<network>
  <name>wrtlocalnet</name>
  <bridge stp='off'/>
  <ip address='192.168.123.253' netmask='255.255.255.0'>
  </ip>
</network>
EOF
virsh net-start default && virsh net-start wrtlocalnet && virsh net-list --all

virt-install -n openwrt --osinfo linux2020 --install no_install=yes \
 --vcpus 1 --ram 256 --video none --graphics none  \
 --disk path=openwrt-21.02.0-x86-64-generic-ext4-combined.qcow2 \
 -w network=wrtlocalnet -w network=default \
 --transient
sed -i 's/192.168.1.1/192.168.123.254/g' /etc/config/network && reload_config 

# make client
virt-install -n sysrescd --osinfo linux2020 --install no_install=yes  \
 --vcpus 1 --ram 1024 --video none --graphics none \
 --disk device=cdrom,path=/home/zorg/ISO/systemrescue-8.03-amd64.iso \
 -w network=wrtlocalnet \
 --transient
# tab, after esc for repaint menu
# choose menu item with up\down key, tab key for edit boot options, add kernel arg: console=ttyS0, enter for run
pacman -Syy && pacman -S --noconfirm xterm && eval $(/usr/bin/resize) && mc
