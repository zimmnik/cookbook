#see content pem certificate
openssl x509 -in cert.crt -noout -text 

#see content certificate from site
echo | openssl s_client -showcerts -servername gitlab.mos.local -connect 192.168.4.248:443 2>/dev/null | openssl x509 -inform pem -noout -text | less
echo | openssl s_client -showcerts -connect gitlab.mos.local:443 | openssl x509 -noout -text | less

# https://stackoverflow.com/questions/10175812/how-to-generate-a-self-signed-ssl-certificate-using-openssl
#----------------------------------------------------------------------------------------------------------------------------
#SELF SIGNED WILDCARD CERT WITH CA (OpenSSL 3.0.1 14 Dec 2021 (Library: OpenSSL 3.0.1 14 Dec 2021))

# create certificate authority
openssl req -newkey rsa:2048 -noenc -keyout CA.key \
-x509 -sha256 -days 3560 -subj "/C=RU/O=Private/CN=Zimmnik Certification Authority" -out CA.crt
openssl x509 -in CA.crt -noout -text | less

# create certificate signing request
openssl req -newkey rsa:2048 -noenc -keyout cert.key \
-subj "/C=RU/O=Private/CN=zimmnik.ru" \
-addext "subjectAltName=DNS:localhost,DNS:zimmnik.ru,DNS:*.zimmnik.ru" -new -sha256 -out cert.csr
openssl req -in cert.csr -text -verify -noout | less

# create certificate from signing request
openssl x509 -CA CA.crt -CAkey CA.key -CAcreateserial \
-req -sha256 -in cert.csr -days 3560 -copy_extensions=copyall -out cert.crt
openssl x509 -in cert.crt -noout -text | less
\rm -v cert.csr

# Check key and crt relation. Output must be empty
diff <(openssl x509 -noout -modulus -in cert.crt) <(openssl rsa -noout -modulus -in cert.key)

#----------------------------------------------------------------------------------------------------------------------------
# INSTALL SELF SIGNED CA
cp mos_local_root_CA.crt /etc/pki/ca-trust/source/anchors/blahblahCA.crt
update-ca-trust
grep ^\# /etc/pki/tls/certs/ca-bundle.crt | sort

#----------------------------------------------------------------------------------------------------------------------------
# EXTRACT CERT FROM JKS KEYSTORE
keytool -list -keystore keystore.jks -storepass blahblah 
keytool -exportcert -keystore keystore.jks -storepass blahblah -alias somecertname -file cert.der
openssl x509 -inform DER -in cert.der -out cert.pem

#----------------------------------------------------------------------------------------------------------------------------
# ADD CERT TO JKS KEYSTORE
openssl x509 -inform pem -in cert.pem -outform der -out cert.der                             
keytool -importcert -keystore keystore.jks -alias somecertname -storepass blahblah -file cert.der
keytool -list -keystore keystore.jks -storepass blahblah 

#----------------------------------------------------------------------------------------------------------------------------
# KEYSTORE FROM JKS TO PEM AND BACK
keytool -list -keystore keystore.jks -storepass secret

keytool -importkeystore \
  -srckeystore  keystore.jks -srcstorepass  secret -srcalias  localhost -srcstoretype  JKS \
  -destkeystore keystore.p12 -deststorepass secret -destalias localhost -deststoretype PKCS12
#openssl pkcs12 -info -in keystore.p12 -passin pass:secret -nodes

openssl pkcs12 -in keystore.p12 -passin pass:secret -out keystore.pem -nodes
#openssl pkcs12 -in keystore.p12 -passin pass:secret -nodes -nocerts -out keystore.pem
#cat keystore.pem

openssl pkcs12 -export -in keystore.pem -out keystore2.p12 -passout pass:secret -name localhost
#openssl pkcs12 -info -in keystore2.p12 -passin pass:secret -nodes

keytool -importkeystore \
  -srckeystore  keystore2.p12 -srcstorepass  secret -srcalias  localhost -srcstoretype PKCS12 \
  -destkeystore keystore2.jks -deststorepass secret -destalias localhost -deststoretype JKS
keytool -list -keystore keystore2.jks -storepass secret
